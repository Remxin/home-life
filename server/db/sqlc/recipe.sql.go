// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: recipe.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createRecipe = `-- name: CreateRecipe :one
INSERT INTO "recipes" (
    id,
    created_by,
    public,
    title,
    description,
    iframe_link,
    image_link
) VALUES (
    gen_random_uuid(),
    $1,
    $2,
    $3,
    $4,
    $5,
    $6
) RETURNING id, created_by, public, title, description, iframe_link, image_link, created_at
`

type CreateRecipeParams struct {
	CreatedBy   uuid.UUID `json:"created_by"`
	Public      bool      `json:"public"`
	Title       string    `json:"title"`
	Description string    `json:"description"`
	IframeLink  string    `json:"iframe_link"`
	ImageLink   string    `json:"image_link"`
}

func (q *Queries) CreateRecipe(ctx context.Context, arg CreateRecipeParams) (Recipe, error) {
	row := q.db.QueryRowContext(ctx, createRecipe,
		arg.CreatedBy,
		arg.Public,
		arg.Title,
		arg.Description,
		arg.IframeLink,
		arg.ImageLink,
	)
	var i Recipe
	err := row.Scan(
		&i.ID,
		&i.CreatedBy,
		&i.Public,
		&i.Title,
		&i.Description,
		&i.IframeLink,
		&i.ImageLink,
		&i.CreatedAt,
	)
	return i, err
}
