syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_verify_user.proto";
import "rpc_login_user.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/Remxin/home-life/server/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Home Life API";
        version: "1.1";
        contact: {
            name: "Dawid";
            url: "github.com/Remxin/home-life/server";
            email: "remxin7@gmail.com";
        };
    };
};



service HomeLife {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new user";
            summary: "Create new user";
        };
    }

    rpc VerifyUser (VerifyUserRequest) returns (VerifyUserResponse) {
        option (google.api.http) = {
            get: "/v1/verify_user",
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to verify created user email";
            summary: "Verify user email"
        };
    }

    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to login user";
            summary: "Login user"
        };
    }
}